# Copyright 2022 The StableHLO Authors.

name: Code Coverage

on:
  pull_request:  # FIXME: push
    branches: [ main ]
    paths-ignore: ['**.md', 'docs/**']
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *' # Every 3 hours
      # '*/5 * * * *'  # Every 10 minutes
      # '0 8 * * 1'    # At 8am on mondays
      # '*/10 * * * *' # Every 10 minutes

# Ensure that only a single job or workflow using the same
# concurrency group will run at a time. This would cancel
# any in-progress jobs in the same github workflow and github
# ref (e.g. refs/heads/main or refs/pull/<pr_number>/merge).
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Build using CMake and run tests.
# Use Cached LLVM to improve build times.
jobs:
  build-test:
    env:
      LLVM_PROJECT_DIR: "llvm-project"
      LLVM_BUILD_DIR: "llvm-build"
      STABLEHLO_BUILD_DIR: "stablehlo-build"
      STABLEHLO_PYTHON_BUILD_DIR: "stablehlo-python-build"
    strategy:
      fail-fast: false
      matrix:
        os-arch: [ubuntu-x86_64]
        include:
          - os-arch: ubuntu-x86_64
            os: ubuntu-22.04
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout StableHLO
      uses: actions/checkout@v2

    - name: Check if ccov is outdated
      id: ccov-status
      shell: bash
      run: |
        git fetch --no-tags --prune --depth=1000 origin +refs/heads/*:refs/remotes/origin/*
        git checkout main && git pull origin main
        git checkout ccov && git pull origin ccov
        CCOV_ROOT=$(git merge-base ccov main)
        MAIN_HASH=$(git rev-parse main)
        echo "Merge base: $CCOV_ROOT"
        echo "Main base:  $MAIN_HASH"
        if [ $CCOV_ROOT = $MAIN_HASH ]
        then
          echo "Up to date. Skipping report generation."
          echo "::set-output name=stale::0"
        else
          echo "::set-output name=stale::1"
        fi

    # Read LLVM version from `build_tools/llvm_version.txt`
    - name: Get LLVM Version
      if: ${{ steps.ccov-status.outputs.stale == 1}}
      id: llvm-version
      shell: bash
      run: |
        echo "::set-output name=version::$(cat ${{ github.workspace }}/build_tools/llvm_version.txt)"

    # Check out LLVM, and install tools for compilation
    - name: Setup workspace
      if: ${{ steps.ccov-status.outputs.stale == 1 }}
      uses: ./.github/actions/setup-build
      with:
        llvm-version: ${{ steps.llvm-version.outputs.version }}

    - name: Configure and Build LLVM
      if: ${{ steps.ccov-status.outputs.stale == 1 }}
      shell: bash
      run: |
        ./build_tools/github_actions/ci_build_llvm.sh "$LLVM_PROJECT_DIR" "$LLVM_BUILD_DIR"

    - name: Gather Code Coverage Metrics
      if: ${{ steps.ccov-status.outputs.stale == 1 }}
      shell: bash
      run: |
        sudo apt install -y lcov
        ./build_tools/github_actions/ci_build_stablehlo_code_coverage.sh "$LLVM_BUILD_DIR" "$STABLEHLO_BUILD_DIR"

    - name: Commit and Upload
      if: ${{ steps.ccov-status.outputs.stale == 1 }}
      shell: bash
      run: |
        git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
        git checkout ccov
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add reports/*
        git commit -m "Generated new report."
        git rebase -Xours main
        git push origin ccov -f
